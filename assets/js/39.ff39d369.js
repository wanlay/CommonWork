(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{180:function(t,e,s){"use strict";s.r(e);var r=s(0),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),s("p",[t._v("正则表达式用于文本内容的查找和替换。")]),s("p",[t._v("正则表达式内置于其它语言或者软件产品中，它本身不是一种语言或者软件。")]),s("p",[t._v("一个问题往往可以用多种正则表达式方案来解决。")]),s("p",[s("a",{attrs:{href:"http://tool.chinaz.com/regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式在线工具"),s("OutboundLink")],1)]),t._m(1),s("p",[t._v("正则表达式一般是区分大小写的，但是也有些实现是不区分。")]),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),s("p",[t._v("匹配以 abc 为开头，并且最后一个字母不为数字的字符串：")]),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),s("p",[t._v("\\r\\n 是 Windows 中的文本行结束标签，在 Unix/Linux 则是 \\n ；\\r\\n\\r\\n 可以匹配 Windows 下的空白行，因为它将匹配两个连续的行尾标签，而这正是两条记录之间的空白行；")]),s("p",[t._v(". 是元字符，前提是没有对它们进行转义； f 和 n 也是元字符，但是前提是对他们进行了转义。")]),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),s("p",[t._v("\\x 匹配十六进制字符，\\0 匹配八进制，例如 \\x0A 对应 ASCII 字符 10 ，等价于 \\n，也就是它会匹配 \\n 。")]),t._m(27),t._m(28),s("p",[t._v("并不是所有正则表达式实现都支持 POSIX 字符类，也不一定使用它。")]),s("p",[t._v("使用时需要用两对方括号，例如 [[:alpha:]]。")]),t._m(29),t._m(30),t._m(31),s("p",[t._v("匹配邮箱地址。")]),t._m(32),t._m(33),s("p",[t._v("[\\w.] 匹配的是字母数字或者 . ，在其后面加上 + ，表示匹配多次。在字符集合 [ ] 里，. 不是元字符；")]),t._m(34),t._m(35),s("p",[t._v("为了可读性，常常把转义的字符放到字符集合 [ ] 中，但是含义是相同的。")]),t._m(36),t._m(37),s("p",[t._v("* 和 + 都是贪婪型元字符，会匹配最多的内容，在元字符后面加 ? 可以转换为懒惰型元字符，例如 *?、+? 和 {m, n}? 。")]),t._m(38),t._m(39),s("p",[t._v("由于 + 是贪婪型的，因此 .+ 会匹配更可能多的内容，所以会把整个 abcabcabc 文本都匹配，而不是只匹配前面的 abc 文本。用懒惰型可以实现匹配前面的。")]),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),s("p",[t._v("\\b 只匹配位置，不匹配字符，因此 \\babc\\b 匹配出来的结果为 3 个字符。")]),t._m(45),t._m(46),s("p",[t._v("^ 元字符在字符集合中用作求非，在字符集合外用作匹配字符串的开头。")]),s("p",[t._v("使用 (?m) 来打开分行匹配模式，在该模式下，换行被当做字符串的边界。")]),t._m(47),s("p",[t._v("匹配代码中以 // 开始的注释行")]),t._m(48),t._m(49),s("p",[t._v("如果没用 (?m)，则只会匹配 // 注释 1 以及之后的所有内容，因为 * 是贪婪型的。用了分行匹配模式之后，换行符被当成是字符串分隔符，因此能正确匹配出两个注释内容。")]),t._m(50),t._m(51),t._m(52),t._m(53),s("p",[t._v("子表达式可以嵌套，但是嵌套层次过深会变得很难理解。")]),t._m(54),t._m(55),t._m(56),t._m(57),t._m(58),t._m(59),t._m(60),t._m(61),t._m(62),s("p",[t._v("匹配 IP 地址。IP 地址中每部分都是 0-255 的数字，用正则表达式匹配时以下情况是合法的：")]),t._m(63),t._m(64),t._m(65),t._m(66),t._m(67),t._m(68),t._m(69),t._m(70),s("p",[t._v("匹配 HTML 中合法的标题元素。")]),t._m(71),s("p",[t._v("\\1 将回溯引用子表达式 (h[1-6]) 匹配的内容，也就是说必须和子表达式匹配的内容一致。")]),t._m(72),t._m(73),t._m(74),t._m(75),s("p",[t._v("需要用到两个正则表达式。")]),t._m(76),s("p",[t._v("修改电话号码格式。")]),t._m(77),s("p",[t._v("313-555-1234")]),t._m(78),t._m(79),t._m(80),s("p",[t._v("在第一个子表达式查找的结果加上 () ，然后加一个空格，在第三个和第五个字表达式查找的结果中间加上 - 进行分隔。")]),t._m(81),t._m(82),s("p",[t._v("(313) 555-1234")]),t._m(83),t._m(84),t._m(85),s("p",[t._v("把文本的第二个和第三个字符转换为大写。")]),t._m(86),s("p",[t._v("abcd")]),t._m(87),t._m(88),t._m(89),t._m(90),t._m(91),s("p",[t._v("aBCd")]),t._m(92),t._m(93),t._m(94),s("p",[t._v("查找出邮件地址 @ 字符前面的部分。")]),t._m(95),t._m(96),t._m(97),t._m(98),s("p",[t._v("对向前和向后查找取非，只要把 = 替换成 ! 即可，比如 (?=) 替换成 (?!) 。取非操作使得匹配那些首尾不符合要求的内容。")]),t._m(99),t._m(100),s("p",[t._v("条件判断为某个子表达式是否匹配，如果匹配则需要继续匹配条件表达式后面的内容。")]),t._m(101),s("p",[t._v("子表达式 (\\() 匹配一个左括号，其后的 ? 表示匹配 0 个或者 1 个。 ?(1) 为条件，当子表达式 1 匹配时条件成立，需要执行 ) 匹配，也就是匹配右括号。")]),t._m(102),t._m(103),t._m(104),t._m(105),s("p",[t._v("条件为定义的首尾是否匹配，如果匹配，则继续执行后面的匹配。注意，首尾不包含在匹配的内容中。")]),t._m(106),s("p",[t._v("?(?=-) 为前向查找条件，只有在以 - 为前向查找的结尾能匹配 \\d{5} ，才继续匹配 -\\d{4} 。")]),t._m(107),t._m(108),t._m(109)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"正则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"匹配单个字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配单个字符","aria-hidden":"true"}},[this._v("#")]),this._v(" 匹配单个字符")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v(".")]),this._v("  可以用来匹配任何的单个字符，但是在绝大多数实现里面，不能匹配换行符；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("\\")]),this._v("  是元字符，表示它有特殊的含义，而不是字符本身的含义。如果需要匹配 . ，那么要用 \\ 进行转义，即在 . 前面加上 \\ 。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("nam.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("My  "),e("strong",[this._v("name")]),this._v("  is Zheng.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"匹配一组字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配一组字符","aria-hidden":"true"}},[this._v("#")]),this._v(" 匹配一组字符")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("[ ]")]),this._v("  定义一个字符集合；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("0-9、a-z 定义了一个字符区间，区间使用 ASCII 码来确定。字符区间只能用在 [ ] 之间，因此  "),e("strong",[this._v("-")]),this._v("  元字符只有在 [ ] 之间才是元字符，在 [ ] 之外就是一个普通字符；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("^")]),this._v("  是取非操作，必须在 [ ] 字符集合中使用；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("abc[^0-9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("abcd")])]),e("li",[this._v("abc1")]),e("li",[this._v("abc2")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用元字符","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用元字符")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"匹配空白字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配空白字符","aria-hidden":"true"}},[this._v("#")]),this._v(" 匹配空白字符")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("元字符")]),s("th",[t._v("说明")])])]),s("tbody",[s("tr",[s("td",[t._v("[\\b]")]),s("td",[t._v("回退（删除）一个字符")])]),s("tr",[s("td",[t._v("\\f")]),s("td",[t._v("换页符")])]),s("tr",[s("td",[t._v("\\n")]),s("td",[t._v("换行符")])]),s("tr",[s("td",[t._v("\\r")]),s("td",[t._v("回车符")])]),s("tr",[s("td",[t._v("\\t")]),s("td",[t._v("制表符")])]),s("tr",[s("td",[t._v("\\v")]),s("td",[t._v("垂直制表符")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"匹配特定的字符类别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配特定的字符类别","aria-hidden":"true"}},[this._v("#")]),this._v(" 匹配特定的字符类别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("1. 数字元字符")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("table",[e("thead",[e("tr",[e("th",[this._v("元字符")]),e("th",[this._v("说明")])])]),e("tbody",[e("tr",[e("td",[this._v("\\d")]),e("td",[this._v("数字字符，等价于 [0-9]")])]),e("tr",[e("td",[this._v("\\D")]),e("td",[this._v("非数字字符，等价于 [^0-9]")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2. 字母数字元字符")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("table",[e("thead",[e("tr",[e("th",[this._v("元字符")]),e("th",[this._v("说明")])])]),e("tbody",[e("tr",[e("td",[this._v("\\w")]),e("td",[this._v("大小写字母，下划线和数字，等价于 [a-zA-Z0-9_]")])]),e("tr",[e("td",[this._v("\\W")]),e("td",[this._v("对 \\w 取非")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("3. 空白字符元字符")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("table",[e("thead",[e("tr",[e("th",[this._v("元字符")]),e("th",[this._v("说明")])])]),e("tbody",[e("tr",[e("td",[this._v("\\s")]),e("td",[this._v("任何一个空白字符，等价于 [\\f\\n\\r\\t\\v]")])]),e("tr",[e("td",[this._v("\\S")]),e("td",[this._v("对 \\s 取非")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用-posix-字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-posix-字符类","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 POSIX 字符类")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("字符类")]),s("th",[t._v("说明")])])]),s("tbody",[s("tr",[s("td",[t._v("[:alnum:]")]),s("td",[t._v("字母数字字符")])]),s("tr",[s("td",[t._v("[:alpha:]")]),s("td",[t._v("字母字符")])]),s("tr",[s("td",[t._v("[:cntrl:]")]),s("td",[t._v("控制字符")])]),s("tr",[s("td",[t._v("[:digit:]")]),s("td",[t._v("数字字符")])]),s("tr",[s("td",[t._v("[:graph:]")]),s("td",[t._v("非空白字符 ( 非空格、控制字符等 )")])]),s("tr",[s("td",[t._v("[:lower:]")]),s("td",[t._v("小写字母")])]),s("tr",[s("td",[t._v("[:print:]")]),s("td",[t._v("与 [:graph:] 相似，但是包含空格字符")])]),s("tr",[s("td",[t._v("[:punct:]")]),s("td",[t._v("标点字符")])]),s("tr",[s("td",[t._v("[:space:]")]),s("td",[t._v("所有的空白字符 ( 换行符、空格、制表符 )")])]),s("tr",[s("td",[t._v("[:upper:]")]),s("td",[t._v("大写字母")])]),s("tr",[s("td",[t._v("[:xdigit:]")]),s("td",[t._v("允许十六进制的数字 (0-9a-fA-F)")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"重复匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复匹配","aria-hidden":"true"}},[this._v("#")]),this._v(" 重复匹配")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("+")]),this._v("  匹配 1 个或者多个字符， "),e("strong",[this._v("*")]),this._v(" 匹配 0 个或者多个，"),e("strong",[this._v("?")]),this._v(" 匹配 0 个或者 1 个。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("[\\w.]+@\\w+.\\w+\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("abc.def"),e("span",[this._v("@")]),this._v("qq.com")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\\w+@\\w+.\\w+\n[\\w]+@[\\w]+.[\\w]+\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("{n}")]),this._v("  匹配 n 个字符，"),e("strong",[this._v("{m, n}")]),this._v(" 匹配 m~n 个字符，"),e("strong",[this._v("{m,}")]),this._v(" 至少匹配 m 个字符；")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("a.+c\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("abcabcabc")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"位置匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#位置匹配","aria-hidden":"true"}},[this._v("#")]),this._v(" 位置匹配")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"单词边界"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单词边界","aria-hidden":"true"}},[this._v("#")]),this._v(" 单词边界")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("\\b")]),this._v("  可以匹配一个单词的边界，边界是指位于 \\w 和 \\W 之间的位置；"),e("strong",[this._v("\\B")]),this._v(" 匹配一个不是单词边界的位置。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"字符串边界"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串边界","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符串边界")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("^")]),this._v("  匹配整个字符串的开头，"),e("strong",[this._v("$")]),this._v(" 匹配结尾。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(?m)^\\s*//.*$\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("public void fun() {")]),e("li",[e("strong",[this._v("// 注释 1")])]),e("li",[this._v("        int a = 1;")]),e("li",[this._v("        int b = 2;")]),e("li",[e("strong",[this._v("// 注释 2")])]),e("li",[this._v("        int c = a + b;")]),e("li",[this._v("}")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用子表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用子表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用子表达式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用  "),e("strong",[this._v("( )")]),this._v("  定义一个子表达式。子表达式的内容可以当成一个独立元素，即可以将它看成一个字符，并且使用 * 等元字符。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(ab) {2,}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("ababab")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("|")]),this._v("  是或元字符，它把左边和右边所有的部分都看成单独的两个部分，两个部分只要有一个匹配就行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(19|20)\\d{2}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("1900")])]),e("li",[e("strong",[this._v("2010")])]),e("li",[this._v("1020")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("一位或者两位的数字")]),e("li",[this._v("1 开头的三位数")]),e("li",[this._v("2 开头，第 2 位是 0-4 的三位数")]),e("li",[this._v("25 开头，第 3 位是 0-5 的三位数")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.) {3}(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5])))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("192.168.0.1")])]),e("li",[this._v("555.555.555.555")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"回溯引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回溯引用","aria-hidden":"true"}},[this._v("#")]),this._v(" 回溯引用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("回溯引用使用  "),e("strong",[this._v("\\n")]),this._v("  来引用某个子表达式，其中 n 代表的是子表达式的序号，从 1 开始。它和子表达式匹配的内容一致，比如子表达式匹配到 abc ，那么回溯引用部分也需要匹配 abc 。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<(h[1-6])>\\w*?</\\1>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("匹配结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("<h1>x</h1>")])]),e("li",[e("strong",[this._v("<h2>x</h2>")])]),e("li",[this._v("<h3>x</h1>")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#替换","aria-hidden":"true"}},[this._v("#")]),this._v(" 替换")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("文本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("查找正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(\\d{3})(-)(\\d{3})(-)(\\d{4})\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("替换正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("($1) $3-$5\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"大小写转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大小写转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 大小写转换")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("元字符")]),s("th",[t._v("说明")])])]),s("tbody",[s("tr",[s("td",[t._v("\\l")]),s("td",[t._v("把下个字符转换为小写")])]),s("tr",[s("td",[t._v("\\u")]),s("td",[t._v("把下个字符转换为大写")])]),s("tr",[s("td",[t._v("\\L")]),s("td",[t._v("把\\L 和\\E 之间的字符全部转换为小写")])]),s("tr",[s("td",[t._v("\\U")]),s("td",[t._v("把\\U 和\\E 之间的字符全部转换为大写")])]),s("tr",[s("td",[t._v("\\E")]),s("td",[t._v("结束\\L 或者\\U")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("文本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("查找")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(\\w)(\\w{2})(\\w)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("替换")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$1\\U$2\\E$3\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前后查找"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前后查找","aria-hidden":"true"}},[this._v("#")]),this._v(" 前后查找")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("前后查找规定了匹配的内容首尾应该匹配的内容，但是又不包含首尾匹配的内容。向前查找用  "),e("strong",[this._v("?=")]),this._v("  来定义，它规定了尾部匹配的内容，这个匹配的内容在 ?= 之后定义。所谓向前查找，就是规定了一个匹配的内容，然后以这个内容为尾部向前面查找需要匹配的内容。向后匹配用 ?<= 定义。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\\w+(?=@)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("abc")]),this._v(" @qq.com")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"嵌入条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌入条件","aria-hidden":"true"}},[this._v("#")]),this._v(" 嵌入条件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"回溯引用条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回溯引用条件","aria-hidden":"true"}},[this._v("#")]),this._v(" 回溯引用条件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(\\()?abc(?(1)\\))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("(abc)")])]),e("li",[e("strong",[this._v("abc")])]),e("li",[this._v("(abc")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"前后查找条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前后查找条件","aria-hidden":"true"}},[this._v("#")]),this._v(" 前后查找条件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("正则表达式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\\d{5}(?(?=-)-\\d{4})\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("strong",[this._v("11111")])]),e("li",[this._v("22222-")]),e("li",[e("strong",[this._v("33333-4444")])])])}],!1,null,null,null);e.default=i.exports}}]);