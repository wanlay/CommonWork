(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{164:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"linux常用操作以及概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux常用操作以及概念","aria-hidden":"true"}},[a._v("#")]),a._v(" linux常用操作以及概念")]),s("h2",{attrs:{id:"求助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#求助","aria-hidden":"true"}},[a._v("#")]),a._v(" 求助")]),s("p",[s("strong",[a._v("1. --help")])]),s("p",[a._v("指令的基本用法与选项介绍。")]),s("p",[s("strong",[a._v("2. man")])]),s("p",[a._v("man 是 manual 的缩写，将指令的具体信息显示出来。")]),s("p",[a._v("当执行 man date 时，有 DATE(1) 出现，其中的数字代表指令的类型，常用的数字及其类型如下：")]),s("table",[s("thead",[s("tr",[s("th",[a._v("代号")]),s("th",[a._v("类型")])])]),s("tbody",[s("tr",[s("td",[a._v("1")]),s("td",[a._v("用户在 shell 环境中可以操作的指令或者可执行文件")])]),s("tr",[s("td",[a._v("5")]),s("td",[a._v("配置文件")])]),s("tr",[s("td",[a._v("8")]),s("td",[a._v("系统管理员可以使用的管理指令")])])])]),s("p",[s("strong",[a._v("3. info")])]),s("p",[a._v("info 与 man 类似，但是 info 将文档分成一个个页面，每个页面可以进行跳转。")]),s("h2",{attrs:{id:"关机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关机","aria-hidden":"true"}},[a._v("#")]),a._v(" 关机")]),s("p",[s("strong",[a._v("1. sync")])]),s("p",[a._v("为了加快对磁盘上文件的读写速度，位于内存中的文件数据不会立即同步到磁盘上，因此关机之前需要先进行 sync 同步操作。")]),s("p",[s("strong",[a._v("2. shutdown")])]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# /sbin/shutdown [-krhc] [时间] [警告讯息]\n-k ： 不会关机，只是发送警告讯息，通知所有在线的用户\n-r ： 将系统的服务停掉后就重新启动\n-h ： 将系统的服务停掉后就立即关机\n-c ： 取消已经在进行的 shutdown 指令内容\n")])])]),s("p",[s("strong",[a._v("3. 其它关机指令")])]),s("p",[a._v("reboot、halt、poweroff。")]),s("h2",{attrs:{id:"查看进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看进程","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看进程")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("ps aux | grep threadx\n")])])]),s("h2",{attrs:{id:"查看端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看端口","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看端口")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("netstat -anp | grep 80\n")])])]),s("h2",{attrs:{id:"path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#path","aria-hidden":"true"}},[a._v("#")]),a._v(" PATH")]),s("p",[a._v("可以在环境变量 PATH 中声明可执行文件的路径，路径之间用 : 分隔。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/dmtsai/.local/bin:/home/dmtsai/bin\n")])])]),s("h2",{attrs:{id:"运行等级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行等级","aria-hidden":"true"}},[a._v("#")]),a._v(" 运行等级")]),s("ul",[s("li",[a._v("0：关机模式")]),s("li",[a._v("1：单用户模式（可用于破解 root 密码）")]),s("li",[a._v("2：无网络支持的多用户模式")]),s("li",[a._v("3：有网络支持的多用户模式（文本模式，工作中最常用的模式）")]),s("li",[a._v("4：保留，未使用")]),s("li",[a._v("5：有网络支持的 X-windows 多用户模式（桌面）")]),s("li",[a._v("6：重新引导系统，即重启")])]),s("h2",{attrs:{id:"sudo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sudo","aria-hidden":"true"}},[a._v("#")]),a._v(" sudo")]),s("p",[a._v("使用 sudo 允许一般用户使用 root 可执行的命令，只有在 /etc/sudoers 配置文件中添加的用户才能使用该指令。")]),s("h2",{attrs:{id:"gnu"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gnu","aria-hidden":"true"}},[a._v("#")]),a._v(" GNU")]),s("p",[a._v("GNU 计划，又译为革奴计划，它的目标是创建一套完全自由的操作系统，称为 GNU，其内容软件完全以 GPL 方式发布。其中 GPL 全称为 GNU 通用公共许可协议，包含了以下内容：")]),s("ul",[s("li",[a._v("以任何目的运行此程序的自由；")]),s("li",[a._v("再复制的自由；")]),s("li",[a._v("改进此程序，并公开发布改进的自由。")])]),s("h2",{attrs:{id:"包管理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理工具","aria-hidden":"true"}},[a._v("#")]),a._v(" 包管理工具")]),s("p",[a._v("RPM 和 DPKG 为最常见的两类软件包管理工具。RPM 全称为 Redhat Package Manager，最早由 Red Hat 公司制定实施，随后被 GNU 开源操作系统接受并成为很多 Linux 系统 (RHEL) 的既定软件标准。与 RPM 进行竞争的是基于 Debian 操作系统 (UBUNTU) 的 DEB 软件包管理工具－ DPKG，全称为 Debian Package，功能方面与 RPM 相似。")]),s("p",[a._v("YUM 基于 RPM 包管理工具，具有依赖管理功能，并具有软件升级的功能。")]),s("h2",{attrs:{id:"常见发行版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见发行版本","aria-hidden":"true"}},[a._v("#")]),a._v(" 常见发行版本")]),s("p",[a._v("Linux 发行版是 Linux 内核及各种应用软件的集成版本。")]),s("table",[s("thead",[s("tr",[s("th",[a._v("基于的包管理工具")]),s("th",[a._v("商业发行版")]),s("th",[a._v("社区发行版")])])]),s("tbody",[s("tr",[s("td",[a._v("DPKG")]),s("td",[a._v("Ubuntu")]),s("td",[a._v("Debian")])]),s("tr",[s("td",[a._v("RPM")]),s("td",[a._v("Red Hat")]),s("td",[a._v("Fedora / CentOS")])])])]),s("h1",{attrs:{id:"分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分区","aria-hidden":"true"}},[a._v("#")]),a._v(" 分区")]),s("h2",{attrs:{id:"磁盘的文件名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘的文件名","aria-hidden":"true"}},[a._v("#")]),a._v(" 磁盘的文件名")]),s("p",[a._v("Linux 中每个硬件都被当做一个文件。")]),s("p",[a._v("常见磁盘的文件名：")]),s("ul",[s("li",[a._v("SCSI/SATA/USB 磁盘：/dev/sd[a-p]")]),s("li",[a._v("IDE 磁盘：/dev/hd[a-d]")])]),s("p",[a._v("其中文件名后面的序号的确定与磁盘插入的顺序有关，而与磁盘所插入的插槽位置无关。")]),s("h2",{attrs:{id:"分区表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分区表","aria-hidden":"true"}},[a._v("#")]),a._v(" 分区表")]),s("p",[a._v("磁盘分区表主要有两种格式，一种是限制较多的 MBR 分区表，一种是较新且限制较少的 GPT 分区表。")]),s("h3",{attrs:{id:"_1-mbr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mbr","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. MBR")]),s("p",[a._v("MBR 中，第一个扇区最重要，里面有主要开机记录（Master boot record, MBR）及分区表（partition table），其中 MBR 占 446 bytes，partition table 占 64 bytes。")]),s("p",[a._v("分区表只有 64 bytes，最多只能存储 4 个分区，这 4 个分区为主分区（Primary）和扩展分区（Extended）。其中扩展分区只有一个，它将其它空间用来记录分区表，因此通过扩展分区可以分出更多分区，这些分区称为逻辑分区。")]),s("p",[a._v("Linux 也把分区当成文件，分区文件的命名方式为：磁盘文件名 + 编号，例如 /dev/sda1。注意，逻辑分区的编号从 5 开始。")]),s("h3",{attrs:{id:"_2-gpt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-gpt","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. GPT")]),s("p",[a._v("不同的磁盘有不同的扇区大小，例如 512 bytes 和最新磁盘的 4 k。GPT 为了兼容所有磁盘，在定义扇区上使用逻辑区块地址（Logical Block Address, LBA）。")]),s("p",[a._v("GPT 第 1 个区块记录了 MBR，紧接着是 33 个区块记录分区信息，并把最后的 33 个区块用于对分区信息进行备份。")]),s("p",[a._v("GPT 没有扩展分区概念，都是主分区，最多可以分 128 个分区。")]),s("h2",{attrs:{id:"开机检测程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开机检测程序","aria-hidden":"true"}},[a._v("#")]),a._v(" 开机检测程序")]),s("h3",{attrs:{id:"_1-bios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-bios","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. BIOS")]),s("p",[a._v("BIOS 是开机的时候计算机执行的第一个程序，这个程序知道可以开机的磁盘，并读取磁盘第一个扇区的 MBR，由 MBR 执行其中的开机管理程序，这个开机管理程序会加载操作系统的核心文件。")]),s("p",[a._v("MBR 中的开机管理程序提供以下功能：选单、载入核心文件以及转交其它开机管理程序。转交这个功能可以用来实现了多重引导，只需要将另一个操作系统的开机管理程序安装在其它分区的启动扇区上，在启动 MBR 中的开机管理程序时，就可以选择启动当前的操作系统或者转交给其它开机管理程序从而启动另一个操作系统。")]),s("p",[a._v("安装多重引导，最好先安装 Windows 再安装 Linux。因为安装 Windows 时会覆盖掉 MBR，而 Linux 可以选择将开机管理程序安装在 MBR 或者其它分区的启动扇区，并且可以设置开机管理程序的选单。")]),s("h3",{attrs:{id:"_2-uefi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-uefi","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. UEFI")]),s("p",[a._v("UEFI 相比于 BIOS 来说功能更为全面，也更为安全。")]),s("h2",{attrs:{id:"挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载","aria-hidden":"true"}},[a._v("#")]),a._v(" 挂载")]),s("p",[a._v("挂载利用目录作为分区的进入点，也就是说，进入目录之后就可以读取分区的数据。")]),s("h1",{attrs:{id:"文件权限与目录配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件权限与目录配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件权限与目录配置")]),s("h2",{attrs:{id:"文件权限概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件权限概念","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件权限概念")]),s("p",[a._v("把用户分为三种：文件拥有者、群组以及其它人，对不同的用户有不同的文件权限。")]),s("p",[a._v("使用 ls 查看一个文件时，会显示一个文件的信息，例如 drwxr-xr-x. 3 root root 17 May 6 00:14 .config，对这个信息的解释如下：")]),s("ul",[s("li",[a._v("drwxr-xr-x：文件类型以及权限，第 1 位为文件类型字段，后 9 位为文件权限字段。")]),s("li",[a._v("3：链接数；")]),s("li",[a._v("root：文件拥有者；")]),s("li",[a._v("root：所属群组；")]),s("li",[a._v("17：文件大小；")]),s("li",[a._v("May 6 00:14：文件最后被修改的时间；")]),s("li",[a._v(".config：文件名。")])]),s("p",[a._v("常见的文件类型及其含义有：")]),s("ul",[s("li",[a._v("d：目录；")]),s("li",[a._v("-：文件；")]),s("li",[a._v("l：链接文件；")])]),s("p",[a._v("9 位的文件权限字段中，每 3 个为一组，共 3 组，每一组分别代表对文件拥有者、所属群组以及其它人的文件权限。一组权限中的 3 位分别为 r、w、x 权限，表示可读、可写、可执行。")]),s("h2",{attrs:{id:"文件属性以及权限的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件属性以及权限的修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件属性以及权限的修改")]),s("h3",{attrs:{id:"_1-修改文件所属群组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改文件所属群组","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 修改文件所属群组")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chgrp [-R] groupname dirname/filename\n-R：递归修改\n")])])]),s("h3",{attrs:{id:"_2-修改文件拥有者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改文件拥有者","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 修改文件拥有者")]),s("p",[a._v("不仅可以修改文件拥有者，也可以修改文件所属群组。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chown [-R] 用户名:群组名 dirname/filename\n")])])]),s("h3",{attrs:{id:"_3-修改权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改权限","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 修改权限")]),s("p",[a._v("可以将一组权限用数字来表示，此时一组权限的 3 个位当做二进制数字的位，从左到右每个位的权值为 4、2、1，即每个权限对应的数字权值为 r : 4、w : 2、x : 1。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chmod [-R] xyz dirname/filename\n")])])]),s("p",[a._v("范例：将 .bashrc 文件的权限修改为 -rwxr-xr--。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chmod 754 .bashrc\n")])])]),s("p",[a._v("也可以使用符号来设定权限。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chmod [ugoa]  [+-=] [rwx] dirname/filename\n- u：拥有者\n- g：所属群组\n- o：其他人\n- a：所有人\n- +：添加权限\n- -：移除权限\n- =：设定权限\n")])])]),s("p",[a._v("范例：为 .bashrc 文件的所有用户添加写权限。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# chmod a+w .bashrc\n")])])]),s("h2",{attrs:{id:"目录的权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录的权限","aria-hidden":"true"}},[a._v("#")]),a._v(" 目录的权限")]),s("p",[a._v("文件名不是存储在一个文件的内容中，而是存储在一个文件所在的目录中。因此，拥有文件的 w 权限并不能对文件名进行修改。")]),s("p",[a._v("目录存储文件列表，一个目录的权限也就是对其文件列表的权限。因此，目录的 r 权限表示可以读取文件列表；w 权限表示可以修改文件列表，具体来说，就是添加删除文件，对文件名进行修改；x 权限可以让该目录成为工作目录，x 权限是 r 和 w 权限的基础，如果不能使一个目录成为工作目录，也就没办法读取文件列表以及对文件列表进行修改了。")]),s("h2",{attrs:{id:"文件默认权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件默认权限","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件默认权限")]),s("p",[a._v("文件默认权限：文件默认没有可执行权限，因此为 666，也就是 -rw-rw-rw- 。\n目录默认权限：目录必须要能够进入，也就是必须拥有可执行权限，因此为 777 ，也就是 drwxrwxrwx。")]),s("p",[a._v("可以通过 umask 设置或者查看文件的默认权限，通常以掩码的形式来表示，例如 002 表示其它用户的权限去除了一个 2 的权限，也就是写权限，因此建立新文件时默认的权限为 -rw-rw-r-- 。")]),s("h2",{attrs:{id:"目录配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 目录配置")]),s("p",[a._v("为了使不同 Linux 发行版本的目录结构保持一致性，Filesystem Hierarchy Standard (FHS) 规定了 Linux 的目录结构。最基础的三个目录如下：")]),s("ul",[s("li",[a._v("/ (root, 根目录)")]),s("li",[a._v("/usr (unix software resource)：所有系统默认软件都会安装到这个目录；")]),s("li",[a._v("/var (variable)：存放系统或程序运行过程中的数据文件。")])]),s("p",[a._v("完整的目录树如下：")]),s("h1",{attrs:{id:"文件与目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件与目录","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件与目录")]),s("h2",{attrs:{id:"文件时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件时间","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件时间")]),s("ol",[s("li",[a._v("modification time (mtime)：文件的内容更新就会更新；")]),s("li",[a._v("status time (ctime)：文件的状态（权限、属性）更新就会更新；")]),s("li",[a._v("access time (atime)：读取文件时就会更新。")])]),s("h2",{attrs:{id:"文件与目录的基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件与目录的基本操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件与目录的基本操作")]),s("h3",{attrs:{id:"_1-ls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-ls","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. ls")]),s("p",[a._v("列出文件或者目录的信息，目录的信息就是其中包含的文件。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# ls [-aAdfFhilnrRSt] file|dir\n-a ：列出全部的文件\n-d ：仅列出目录本身\n-l ：以长数据串行列出，包含文件的属性与权限等等数据\n")])])]),s("h3",{attrs:{id:"_2-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-cp","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. cp")]),s("p",[a._v("复制操作。")]),s("p",[a._v("如果源文件有两个以上，则目的文件一定要是目录才行。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("cp [-adfilprsu] source destination\n-a ：相当于 -dr --preserve=all 的意思，至于 dr 请参考下列说明\n-d ：若来源文件为链接文件，则复制链接文件属性而非文件本身\n-i ：若目标文件已经存在时，在覆盖前会先询问\n-p ：连同文件的属性一起复制过去\n-r ：递归持续复制\n-u ：destination 比 source 旧才更新 destination，或 destination 不存在的情况下才复制\n--preserve=all ：除了 -p 的权限相关参数外，还加入 SELinux 的属性, links, xattr 等也复制了\n")])])]),s("h3",{attrs:{id:"_3-rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-rm","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. rm")]),s("p",[a._v("移除操作。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# rm [-fir] 文件或目录\n-r ：递归删除\n")])])]),s("h3",{attrs:{id:"_4-mv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-mv","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. mv")]),s("p",[a._v("移动操作。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# mv [-fiu] source destination\n# mv [options] source1 source2 source3 .... directory\n-f ： force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖\n")])])]),s("h2",{attrs:{id:"获取文件内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取文件内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 获取文件内容")]),s("h3",{attrs:{id:"_1-cat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-cat","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. cat")]),s("p",[a._v("取得文件内容。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# cat [-AbEnTv] filename\n-n ：打印出行号，连同空白行也会有行号，-b 不会\n")])])]),s("h3",{attrs:{id:"_2-tac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-tac","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. tac")]),s("p",[a._v("是 cat 的反向操作，从最后一行开始打印。")]),s("h3",{attrs:{id:"_3-more"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-more","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. more")]),s("p",[a._v("可以一页一页查看文件内容，和文本编辑器类似。")]),s("h3",{attrs:{id:"_4-less"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-less","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. less")]),s("p",[a._v("和 more 类似。")]),s("h3",{attrs:{id:"_5-head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-head","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. head")]),s("p",[a._v("可以取得文件前几行。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# head [-n number] filename\n-n ：后面接数字，代表显示几行的意思\n")])])]),s("h3",{attrs:{id:"_6-tail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-tail","aria-hidden":"true"}},[a._v("#")]),a._v(" 6. tail")]),s("p",[a._v("是 head 的反向操作，只是取得是后几行。")]),s("h3",{attrs:{id:"_7-od"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-od","aria-hidden":"true"}},[a._v("#")]),a._v(" 7. od")]),s("p",[a._v("可以以字符或者十六进制的形式显示二进制文件。")]),s("h3",{attrs:{id:"_8-touch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-touch","aria-hidden":"true"}},[a._v("#")]),a._v(" 8. touch")]),s("p",[a._v("修改文件时间或者建立新文件。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('# touch [-acdmt] filename\n-a ： 更新 atime\n-c ： 更新 ctime，若该文件不存在则不建立新文件\n-m ： 更新 mtime\n-d ： 后面可以接欲更新的日期而不用当前的日期，也可以使用 --date="日期或时间"\n-t ： 后面可以接欲更新的时间而不用当前的时间，格式为[YYYYMMDDhhmm]\n')])])]),s("h2",{attrs:{id:"指令与文件搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令与文件搜索","aria-hidden":"true"}},[a._v("#")]),a._v(" 指令与文件搜索")]),s("h3",{attrs:{id:"_1-which"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-which","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. which")]),s("p",[a._v("指令搜索。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# which [-a] command\n-a ：将所有指令列出，而不是只列第一个\n")])])]),s("h3",{attrs:{id:"_2-whereis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-whereis","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. whereis")]),s("p",[a._v("whereis 搜索文件的速度比较快，因为它只搜索几个特定的目录。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# whereis [-bmsu] dirname/filename\n")])])]),s("h3",{attrs:{id:"_3-locate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-locate","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. locate")]),s("p",[a._v("locate 可以用关键字或者正则表达式进行搜索。")]),s("p",[a._v("locate 使用 /var/lib/mlocate/ 这个数据库来进行搜索，它存储在内存中，并且每天更新一次，所以无法用 locate 搜索新建的文件。可以使用 updatedb 来立即更新数据库。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# locate [-ir] keyword\n-r：接正则表达式\n")])])]),s("h3",{attrs:{id:"_4-find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-find","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. find")]),s("p",[a._v("find 可以使用文件的属性和权限进行搜索。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# find filename [option]\n")])])]),s("h4",{attrs:{id:"_4-1-与时间有关的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-与时间有关的选项","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1 与时间有关的选项")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("-mtime  n ：列出在 n 天前的那一天修改过内容的文件\n-mtime +n ：列出在 n 天之前 (不含 n 天本身) 修改过内容的文件\n-mtime -n ：列出在 n 天之内 (含 n 天本身) 修改过内容的文件\n-newer file ： 列出比 file 更新的文件\n")])])]),s("p",[a._v("+4、4 和 -4 的指示的时间范围如下：")]),s("h4",{attrs:{id:"_4-2-与文件拥有者和所属群组有关的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-与文件拥有者和所属群组有关的选项","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2 与文件拥有者和所属群组有关的选项")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("-uid n\n-gid n\n-user name\n-group name\n-nouser ：搜索拥有者不存在 /etc/passwd 的文件\n-nogroup：搜索所属群组不存在于 /etc/group 的文件\n")])])]),s("h4",{attrs:{id:"_4-3-与文件权限和名称有关的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-与文件权限和名称有关的选项","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3 与文件权限和名称有关的选项")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("-name filename\n-size [+-]SIZE：搜寻比 SIZE 还要大 (+) 或小 (-) 的文件。这个 SIZE 的规格有：c: 代表 byte，k: 代表 1024bytes。所以，要找比 50KB 还要大的文件，就是 -size +50k\n-type TYPE\n-perm mode  ：搜索权限等于 mode 的文件\n-perm -mode ：搜索权限包含 mode 的文件\n-perm /mode ：搜索权限包含任一 mode 的文件\n")])])]),s("h1",{attrs:{id:"磁盘与文件系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘与文件系统","aria-hidden":"true"}},[a._v("#")]),a._v(" 磁盘与文件系统")]),s("h2",{attrs:{id:"文件系统的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件系统的组成","aria-hidden":"true"}},[a._v("#")]),a._v(" 文件系统的组成")]),s("p",[a._v("对分区进行格式化是为了在分区上建立文件系统。一个分区通常只能格式化为一个文件系统，但是磁盘阵列等技术可以将一个分区格式化为多个文件系统，因此只有文件系统能被挂载，而分区不能被挂载。")]),s("p",[a._v("文件系统有以下三个结构：")]),s("ol",[s("li",[a._v("superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等；")]),s("li",[a._v("inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 号码；")]),s("li",[a._v("block：记录文件的内容，文件太大时，会占用多个 block。")])]),s("p",[a._v("当要读取一个文件的内容时，先在 inode 中去查找文件内容所在的所有 block，然后把所有 block 的内容读出来。")]),s("p",[a._v("磁盘碎片是指一个文件内容所在的 block 过于分散。")]),s("p",[a._v("Ext2 文件系统使用了上述的文件结构，并在此之上加入了 block 群组的概念，也就是将一个文件系统划分为多个 block 群组，方便管理。")]),s("h2",{attrs:{id:"inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inode","aria-hidden":"true"}},[a._v("#")]),a._v(" inode")]),s("p",[a._v("Ext2 文件系统支持的 block 大小有 1k、2k 和 4k 三种，不同的 block 大小限制了单一文件的大小。而每个 inode 大小是固定为 128 bytes。")]),s("p",[a._v("inode 中记录了文件内容所在的 block，但是每个 block 非常小，一个大文件随便都需要几十万的 block。而一个 inode 大小有限，无法直接引用这么多 block。因此引入了间接、双间接、三间接引用。间接引用是指，让 inode 记录的引用 block 块当成 inode 用来记录引用信息。")]),s("p",[a._v("inode 具体包含以下信息：")]),s("ul",[s("li",[a._v("该文件的存取模式 (read/write/excute)；")]),s("li",[a._v("该文件的拥有者与群组 (owner/group)；")]),s("li",[a._v("该文件的容量；")]),s("li",[a._v("该文件建立或状态改变的时间 (ctime)；")]),s("li",[a._v("最近一次的读取时间 (atime)；")]),s("li",[a._v("最近修改的时间 (mtime)；")]),s("li",[a._v("定义文件特性的旗标 (flag)，如 SetUID...；")]),s("li",[a._v("该文件真正内容的指向 (pointer)。")])]),s("h2",{attrs:{id:"目录的-inode-与-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录的-inode-与-block","aria-hidden":"true"}},[a._v("#")]),a._v(" 目录的 inode 与 block")]),s("p",[a._v("建立一个目录时，会分配一个 inode 与至少一个 block。block 记录的内容是目录下所有文件的 inode 编号以及文件名。可以看出文件的 inode 本身不记录文件名，文件名记录在目录中，因此新增文件、删除文件、更改文件名这些操作与目录的 w 权限有关。")]),s("h2",{attrs:{id:"实体链接与符号链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实体链接与符号链接","aria-hidden":"true"}},[a._v("#")]),a._v(" 实体链接与符号链接")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# ln [-sf] source_filename dist_filename\n-s ：默认是 hard link，加 -s 为 symbolic link\n-f ：如果目标文件存在时，先删除目标文件\n")])])]),s("h3",{attrs:{id:"_1-实体链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-实体链接","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 实体链接")]),s("p",[a._v("它和普通文件类似，实体链接文件的 inode 都指向源文件所在的 block 上，也就是说读取文件直接从源文件的 block 上读取。")]),s("p",[a._v("删除任意一个条目，文件还是存在，只要引用数量不为 0。")]),s("p",[a._v("有以下限制：不能跨越 File System；不能对目录进行链接。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# ln /etc/crontab .\n# ll -i /etc/crontab crontab\n34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 crontab\n34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab\n")])])]),s("h3",{attrs:{id:"_2-符号链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-符号链接","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 符号链接")]),s("p",[a._v("符号链接文件保存着源文件所在的绝对路径，在读取时会定位到源文件上，可以理解为 Windows 的快捷方式。")]),s("p",[a._v("当源文件被删除了，链接文件就打不开了。")]),s("p",[a._v("可以为目录建立链接。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("# ll -i /etc/crontab /root/crontab2\n34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab\n53745909 lrwxrwxrwx. 1 root root 12 Jun 23 22:31 /root/crontab2 -> /etc/crontab\n")])])]),s("h1",{attrs:{id:"压缩与打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩与打包","aria-hidden":"true"}},[a._v("#")]),a._v(" 压缩与打包")]),s("h2",{attrs:{id:"压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩","aria-hidden":"true"}},[a._v("#")]),a._v(" 压缩")]),s("p",[a._v("Linux 底下有很多压缩文件的扩展名，常见的如下：")]),s("table",[s("thead",[s("tr",[s("th",[a._v("扩展名")]),s("th",[a._v("压缩程序")])])]),s("tbody",[s("tr",[s("td",[a._v("*.Z")]),s("td",[a._v("compress")])]),s("tr",[s("td",[a._v("*.zip")]),s("td",[a._v("zip")])]),s("tr",[s("td",[a._v("*.gz")]),s("td",[a._v("gzip")])]),s("tr",[s("td",[a._v("*.bz2")]),s("td",[a._v("bzip2")])]),s("tr",[s("td",[a._v("*.xz")]),s("td",[a._v("xz")])]),s("tr",[s("td",[a._v("*.tar")]),s("td",[a._v("tar 程序打包的数据，没有经过压缩")])]),s("tr",[s("td",[a._v("*.tar.gz")]),s("td",[a._v("tar 程序打包的文件，经过 gzip 的压缩")])]),s("tr",[s("td",[a._v("*.tar.bz2")]),s("td",[a._v("tar 程序打包的文件，经过 bzip2 的压缩")])]),s("tr",[s("td",[a._v("*.tar.xz")]),s("td",[a._v("tar 程序打包的文件，经过 xz 的压缩")])])])]),s("h3",{attrs:{id:"_1-gzip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-gzip","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. gzip")]),s("p",[a._v("gzip 是 Linux 使用最广的压缩指令，可以解开 compress、zip 与 gzip 所压缩的文件。")]),s("p",[a._v("经过 gzip 压缩过，源文件就不存在了。")]),s("p",[a._v("有 9 个不同的压缩等级可以使用。")]),s("p",[a._v("可以使用 zcat、zmore、zless 来读取压缩文件的内容。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ gzip [-cdtv#] filename\n-c ：将压缩的数据输出到屏幕上\n-d ：解压缩\n-t ：检验压缩文件是否出错\n-v ：显示压缩比等信息\n-# ： # 为数字的意思，代表压缩等级，数字越大压缩比越高，默认为 6\n")])])]),s("h3",{attrs:{id:"_2-bzip2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-bzip2","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. bzip2")]),s("p",[a._v("提供比 gzip 更高的压缩比。")]),s("p",[a._v("查看命令：bzcat、bzmore、bzless、bzgrep。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ bzip2 [-cdkzv#] filename\n-k ：保留源文件\n")])])]),s("h3",{attrs:{id:"_3-xz"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-xz","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. xz")]),s("p",[a._v("提供比 bzip2 更佳的压缩比。")]),s("p",[a._v("可以看到，gzip、bzip2、xz 的压缩比不断优化。不过要注意，压缩比越高，压缩的时间也越长。")]),s("p",[a._v("查看命令：xzcat、xzmore、xzless、xzgrep。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ xz [-dtlkc#] filename\n")])])]),s("h2",{attrs:{id:"打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包","aria-hidden":"true"}},[a._v("#")]),a._v(" 打包")]),s("p",[a._v("压缩指令只能对一个文件进行压缩，而打包能够将多个文件打包成一个大文件。tar 不仅可以用于打包，也可以使用 gip、bzip2、xz 将打包文件进行压缩。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ tar [-z|-j|-J] [cv] [-f 新建的 tar 文件] filename...  ==打包压缩\n$ tar [-z|-j|-J] [tv] [-f 已有的 tar 文件]              ==查看\n$ tar [-z|-j|-J] [xv] [-f 已有的 tar 文件] [-C 目录]    ==解压缩\n-z ：使用 zip；\n-j ：使用 bzip2；\n-J ：使用 xz；\n-c ：新建打包文件；\n-t ：查看打包文件里面有哪些文件；\n-x ：解打包或解压缩的功能；\n-v ：在压缩/解压缩的过程中，显示正在处理的文件名；\n-f : filename：要处理的文件；\n-C 目录 ： 在特定目录解压缩。\n")])])]),s("table",[s("thead",[s("tr",[s("th",[a._v("使用方式")]),s("th",[a._v("命令")])])]),s("tbody",[s("tr",[s("td",[a._v("打包压缩")]),s("td",[a._v("tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称")])]),s("tr",[s("td",[a._v("查 看")]),s("td",[a._v("tar -jtv -f filename.tar.bz2")])]),s("tr",[s("td",[a._v("解压缩")]),s("td",[a._v("tar -jxv -f filename.tar.bz2 -C 要解压缩的目录")])])])]),s("h1",{attrs:{id:"bash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bash","aria-hidden":"true"}},[a._v("#")]),a._v(" Bash")]),s("p",[a._v("可以通过 Shell 请求内核提供服务，Bash 正是 Shell 的一种。")]),s("h2",{attrs:{id:"bash-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bash-特性","aria-hidden":"true"}},[a._v("#")]),a._v(" Bash 特性")]),s("p",[s("strong",[a._v("1. 命令历史")])]),s("p",[a._v("记录使用过的命令。本次登录所执行的命令都会暂时存放到内存中， ~/.bash_history 文件中记录的是前一次登录所执行过的命令。")]),s("p",[s("strong",[a._v("2. 命令与文件补全")])]),s("p",[a._v("快捷键：tab")]),s("p",[s("strong",[a._v("3. 命名别名")])]),s("p",[a._v("例如 lm 是 ls -al 的别名。")]),s("p",[s("strong",[a._v("4. shell scripts")])]),s("p",[s("strong",[a._v("5. 通配符")])]),s("p",[a._v("例如 ls -l /usr/bin/X* 列出 /usr/bin 下面所有以 X 开头的文件。")]),s("h2",{attrs:{id:"变量操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量操作")]),s("ul",[s("li",[a._v("对一个变量赋值直接使用 = ；")]),s("li",[a._v("对变量取用需要在变量前加上 $ ，也可以用 ${} 的形式；")]),s("li",[a._v("输出变量使用 echo 命令。")])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("abc\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$var")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${var}")]),a._v("\n")])])]),s("p",[a._v("变量内容如果有空格，需要使用双引号或者单引号。双引号内的特殊字符可以保留原本特性，例如 var=\"lang is $LANG\"，则 var 的值为 lang is zh_TW.UTF-8；而单引号内的特殊字符就是特殊字符本身，例如 var='lang is $LANG'，则 var 的值为 lang is $LANG。")]),s("p",[a._v("可以使用 `指令` 或者 $(指令) 的方式将指令的执行结果赋值给变量。例如 version=$(uname -r)，则 version 的值为 3.10.0-229.el7.x86_64。")]),s("p",[a._v("可以使用 export 命令将自定义变量转成环境变量，环境变量可以在子程序中使用，所谓子程序就是由当前 Bash 而产生的子 Bash。")]),s("p",[a._v("Bash 的变量可以声明为数组和整数数字。注意数字类型没有浮点数。如果不进行声明，默认是字符串类型。变量的声明使用 declare 命令：")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ declare [-aixr] variable\n-a ： 定义为数组类型\n-i ： 定义为整数类型\n-x ： 定义为环境变量\n-r ： 定义为 readonly 类型\n")])])]),s("p",[a._v("使用 [ ] 来对数组进行索引操作：")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("a\n$ array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("b\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"指令搜索顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令搜索顺序","aria-hidden":"true"}},[a._v("#")]),a._v(" 指令搜索顺序")]),s("ol",[s("li",[a._v("以绝对或相对路径来执行指令，例如 /bin/ls 或者 ./ls ；")]),s("li",[a._v("由别名找到该指令来执行；")]),s("li",[a._v("由 Bash 内建的指令来执行；")]),s("li",[a._v("按 $PATH 变量指定的搜索路径的顺序找到第一个指令来执行。")])]),s("h2",{attrs:{id:"数据流重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据流重定向","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据流重定向")]),s("p",[a._v("重定向就是使用文件代替标准输入、标准输出和标准错误输出。")]),s("ol",[s("li",[a._v("标准输入 (stdin)       ：代码为 0 ，使用 < 或 << ；")]),s("li",[a._v("标准输出 (stdout)     ：代码为 1 ，使用 > 或 >> ；")]),s("li",[a._v("标准错误输出 (stderr)：代码为 2 ，使用 2> 或 2>> ；")])]),s("p",[a._v("其中，有一个箭头的表示以覆盖的方式重定向，而有两个箭头的表示以追加的方式重定向。")]),s("p",[a._v("可以将不需要的标准输出以及标准错误输出重定向到 /dev/null，相当于扔进垃圾箱。")]),s("p",[a._v("如果需要将标准输出以及标准错误输出同时重定向到一个文件，需要将某个输出转换为另一个输出，例如 2>&1 表示将标准错误输出转换为标准输出。")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home -name .bashrc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v("\n")])])]),s("h2",{attrs:{id:"管线指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管线指令","aria-hidden":"true"}},[a._v("#")]),a._v(" 管线指令")]),s("p",[a._v("管线是将一个命令的标准输出作为另一个命令的标准输入，在数据需要经过多个步骤的处理之后才能得到我们想要的内容时就可以使用管线。在命令之间使用 | 分隔各个管线命令。")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -al /etc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("less")]),a._v("\n")])])]),s("h3",{attrs:{id:"_1-提取指令：cut"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-提取指令：cut","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 提取指令：cut")]),s("p",[a._v("cut 对数据进行切分，取出想要的部分。提取过程一行一行地进行。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ cut\n-d ：分隔符\n-f ：经过 -d 分隔后，使用 -f n 取出第 n 个区间\n-c ：以字符为单位取出区间\n")])])]),s("p",[a._v("范例 1：last 将显示的登入者的信息，要求仅显示用户名。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ last\nroot pts/1 192.168.201.101 Sat Feb 7 12:35 still logged in\nroot pts/1 192.168.201.101 Fri Feb 6 12:13 - 18:46 (06:33)\nroot pts/1 192.168.201.254 Thu Feb 5 22:37 - 23:53 (01:16)\n\n$ last | cut -d ' ' -f 1\n")])])]),s("p",[a._v("范例 2：将 export 输出的讯息，取得第 12 字符以后的所有字符串。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('$ export\ndeclare -x HISTCONTROL="ignoredups"\ndeclare -x HISTSIZE="1000"\ndeclare -x HOME="/home/dmtsai"\ndeclare -x HOSTNAME="study.centos.vbird"\n.....(其他省略).....\n\n$ export | cut -c 12\n')])])]),s("h3",{attrs:{id:"_2-排序命令：sort、uniq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-排序命令：sort、uniq","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 排序命令：sort、uniq")]),s("p",[s("strong",[a._v("sort")]),a._v("  进行排序。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ sort [-fbMnrtuk] [file or stdin]\n-f ：忽略大小写\n-b ：忽略最前面的空格\n-M ：以月份的名字来排序，例如 JAN，DEC\n-n ：使用数字\n-r ：反向排序\n-u ：相当于 unique，重复的内容只出现一次\n-t ：分隔符，默认为 tab\n-k ：指定排序的区间\n")])])]),s("p",[a._v("范例：/etc/passwd 内容是以 : 来分隔的，以第三栏来排序。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ cat /etc/passwd | sort -t ':' -k 3\nroot:x:0:0:root:/root:/bin/bash\ndmtsai:x:1000:1000:dmtsai:/home/dmtsai:/bin/bash\nalex:x:1001:1002::/home/alex:/bin/bash\narod:x:1002:1003::/home/arod:/bin/bash\n")])])]),s("p",[s("strong",[a._v("uniq")]),a._v("  可以将重复的数据只取一个。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ uniq [-ic]\n-i ：忽略大小写\n-c ：进行计数\n")])])]),s("p",[a._v("范例：取得每个人的登录总次数")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ last | cut -d ' ' -f 1 | sort | uniq -c\n1\n6 (unknown\n47 dmtsai\n4 reboot\n7 root\n1 wtmp\n")])])]),s("h3",{attrs:{id:"_3-双向输出重定向：tee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-双向输出重定向：tee","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 双向输出重定向：tee")]),s("p",[a._v("输出重定向会将输出内容重定向到文件中，而  "),s("strong",[a._v("tee")]),a._v("  不仅能够完成这个功能，还能保留屏幕上的输出。也就是说，使用 tee 指令，一个输出会同时传送到文件和屏幕上。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ tee [-a] file\n")])])]),s("h3",{attrs:{id:"_4-字符转换指令：tr、col、expand、join、paste"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符转换指令：tr、col、expand、join、paste","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 字符转换指令：tr、col、expand、join、paste")]),s("p",[s("strong",[a._v("tr")]),a._v("  用来删除一行中的字符，或者对字符进行替换。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ tr [-ds] SET1 ...\n-d ： 删除行中 SET1 这个字符串\n")])])]),s("p",[a._v("范例，将 last 输出的信息所有小写转换为大写。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ last | tr '[a-z]' '[A-Z]'\n")])])]),s("p",[s("strong",[a._v("col")]),a._v("  将 tab 字符转为空格字符。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ col [-xb]\n-x ： 将 tab 键转换成对等的空格键\n")])])]),s("p",[s("strong",[a._v("expand")]),a._v("  将 tab 转换一定数量的空格，默认是 8 个。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ expand [-t] file\n-t ：tab 转为空格的数量\n")])])]),s("p",[s("strong",[a._v("join")]),a._v("  将有相同数据的那一行合并在一起。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ join [-ti12] file1 file2\n-t ：分隔符，默认为空格\n-i ：忽略大小写的差异\n-1 ：第一个文件所用的比较字段\n-2 ：第二个文件所用的比较字段\n")])])]),s("p",[s("strong",[a._v("paste")]),a._v("  直接将两行粘贴在一起。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ paste [-d] file1 file2\n-d ：分隔符，默认为 tab\n")])])]),s("h3",{attrs:{id:"_5-分区指令：split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-分区指令：split","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. 分区指令：split")]),s("p",[s("strong",[a._v("split")]),a._v("  将一个文件划分成多个文件。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ split [-bl] file PREFIX\n-b ：以大小来进行分区，可加单位，例如 b, k, m 等\n-l ：以行数来进行分区。\n- PREFIX ：分区文件的前导名称\n")])])]),s("h1",{attrs:{id:"正规表示法与文件格式化处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正规表示法与文件格式化处理","aria-hidden":"true"}},[a._v("#")]),a._v(" 正规表示法与文件格式化处理")]),s("h2",{attrs:{id:"grep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep","aria-hidden":"true"}},[a._v("#")]),a._v(" grep")]),s("p",[a._v("使用正则表示式把匹配的行提取出来。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ grep [-acinv] [--color=auto] 搜寻字符串 filename\n-a ： 将 binary 文件以 text 文件的方式进行搜寻\n-c ： 计算找到个数\n-i ： 忽略大小写\n-n ： 输出行号\n-v ： 反向选择，亦即显示出没有 搜寻字符串 内容的那一行\n--color=auto ：找到的关键字加颜色显示\n")])])]),s("p",[a._v("范例：把含有 the 字符串的行提取出来（注意默认会有 --color=auto 选项，因此以下内容在 Linux 中有颜色显示 the 字符串）")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ grep -n 'the' regular_express.txt\n8:I can't finish the test.\n12:the symbol '*' is represented as start.\n15:You are the best is mean you are the no. 1.\n16:The world Happy is the same with \"glad\".\n18:google is the best tools for search keyword\n")])])]),s("p",[a._v("因为 { 与 } 的符号在 shell 是有特殊意义的，因此必须要使用使用转义字符进行转义。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ grep -n 'go\\{2,5\\}g' regular_express.txt\n")])])]),s("h2",{attrs:{id:"printf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#printf","aria-hidden":"true"}},[a._v("#")]),a._v(" printf")]),s("p",[a._v("用于格式化输出。")]),s("p",[a._v("它不属于管道命令，在给 printf 传数据时需要使用 $( ) 形式。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ printf '%10s %5i %5i %5i %8.2f \\n' $(cat printf.txt)\n    DmTsai    80    60    92    77.33\n     VBird    75    55    80    70.00\n       Ken    60    90    70    73.33\n")])])]),s("h2",{attrs:{id:"awk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk","aria-hidden":"true"}},[a._v("#")]),a._v(" awk")]),s("p",[a._v("可以根据字段的某些条件进行匹配，例如匹配字段小于某个值的那一行数据。")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("$ awk '条件类型 1 {动作 1} 条件类型 2 {动作 2} ...' filename\n")])])]),s("p",[a._v("awk 每次处理一行，处理的最小单位是字段，每个字段的命名方式为：$n，n 为字段号，从 1 开始，$0 表示一整行。")]),s("p",[a._v("范例 1：取出登录用户的用户名和 ip")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('$ last -n 5\ndmtsai pts/0 192.168.1.100 Tue Jul 14 17:32 still logged in\ndmtsai pts/0 192.168.1.100 Thu Jul 9 23:36 - 02:58 (03:22)\ndmtsai pts/0 192.168.1.100 Thu Jul 9 17:23 - 23:36 (06:12)\ndmtsai pts/0 192.168.1.100 Thu Jul 9 08:02 - 08:17 (00:14)\ndmtsai tty1 Fri May 29 11:55 - 12:11 (00:15)\n\n$ last -n 5 | awk \'{print $1 "\\t" $3}\n')])])]),s("p",[a._v("awk 变量：")]),s("table",[s("thead",[s("tr",[s("th",[a._v("变量名称")]),s("th",[a._v("代表意义")])])]),s("tbody",[s("tr",[s("td",[a._v("NF")]),s("td",[a._v("每一行拥有的字段总数")])]),s("tr",[s("td",[a._v("NR")]),s("td",[a._v("目前所处理的是第几行数据")])]),s("tr",[s("td",[a._v("FS")]),s("td",[a._v("目前的分隔字符，默认是空格键")])])])]),s("p",[a._v("范例 2：输出正在处理的行号，并显示每一行有多少字段")]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('$ last -n 5 | awk \'{print $1 "\\t lines: " NR "\\t columns: " NF}\'\ndmtsai lines: 1 columns: 10\ndmtsai lines: 2 columns: 10\ndmtsai lines: 3 columns: 10\ndmtsai lines: 4 columns: 10\ndmtsai lines: 5 columns: 9\n')])])]),s("p",[a._v("可以使用条件，其中等于使用 ==。")]),s("p",[a._v("范例 3：/etc/passwd 文件第三个字段为 UID，对 UID 小于 10 的数据进行处理。")]),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('cat /etc/passwd | awk \'BEGIN {FS=":"} $3 < 10 {print $1 "\\t " $3}\'\nroot 0\nbin 1\ndaemon 2\n')])])]),s("h1",{attrs:{id:"vim-三个模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-三个模式","aria-hidden":"true"}},[a._v("#")]),a._v(" vim 三个模式")]),s("p",[a._v("在指令列模式下，有以下命令用于离开或者存储文件。")]),s("table",[s("thead",[s("tr",[s("th",[a._v("命令")]),s("th",[a._v("作用")])])]),s("tbody",[s("tr",[s("td",[a._v(":w")]),s("td",[a._v("写入磁盘")])]),s("tr",[s("td",[a._v(":w!")]),s("td",[a._v("当文件为只读时，强制写入磁盘。到底能不能写入，与用户对该文件的权限有关")])]),s("tr",[s("td",[a._v(":q")]),s("td",[a._v("离开")])]),s("tr",[s("td",[a._v(":q!")]),s("td",[a._v("强制离开不保存")])]),s("tr",[s("td",[a._v(":wq")]),s("td",[a._v("写入磁盘后离开")])]),s("tr",[s("td",[a._v(":wq!")]),s("td",[a._v("强制写入磁盘后离开")])])])])])}],!1,null,null,null);t.default=e.exports}}]);